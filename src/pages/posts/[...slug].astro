---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import { SITE_TITLE } from '../../consts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content, headings } = await post.render();

// Generate Breadcrumbs from slug
const slugParts = post.slug.split('/').filter(p => p);
const breadcrumbs = slugParts.map((part, index) => {
  const path = `/posts/${slugParts.slice(0, index + 1).join('/')}`;
  // Ganti '-' dengan spasi dan ubah jadi Title Case untuk tampilan
  const text = part.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
  return { text, path };
});
---

<MainLayout
  title={`${post.data.title} | ${SITE_TITLE}`}
  description={post.data.description}
  image={post.data.heroImage}
  url={`/posts/${post.slug}`}
>
  <div class="post-layout">
    <main class="post-content">
      <nav aria-label="Breadcrumb">
        <ol class="breadcrumbs">
          <li><a href="/posts">Posts</a></li>
          {breadcrumbs.slice(0, -1).map(crumb => (
            <li><span>&rsaquo;</span> <a href={crumb.path}>{crumb.text}</a></li>
          ))}
        </ol>
      </nav>

      <article>
        <h1 class="title">{post.data.title}</h1>
        <p class="date">
          Published on {post.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
        </p>
        <Content />
      </article>
    </main>

    <aside class="sidebar">
      <TableOfContents headings={headings} />
    </aside>
  </div>
</MainLayout>

<style>
  /* Layout utama halaman post */
  .post-layout {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  /* Layout 2 kolom untuk layar lebar */
  @media (min-width: 1024px) {
    .post-layout {
      grid-template-columns: minmax(0, 3fr) 1fr; /* 75% content, 25% sidebar */
    }
  }

  /* Breadcrumbs */
  .breadcrumbs {
    list-style: none;
    padding: 0;
    margin: 0 0 1.5rem 0;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    font-size: 0.9rem;
    opacity: 0.8;
  }
  .breadcrumbs li {
    display: flex;
    align-items: center;
  }
  .breadcrumbs a {
    color: inherit;
    text-decoration: none;
  }
  .breadcrumbs a:hover {
    text-decoration: underline;
  }
  .breadcrumbs span {
    margin: 0 0.5rem;
  }

  .title {
    font-size: 2.8rem;
    margin-bottom: 0.5rem;
    line-height: 1.2;
  }
  .date {
    font-size: 0.9rem;
    opacity: 0.7;
    margin-bottom: 2rem;
  }

  /* Style global untuk konten dari markdown */
  article :global(h2) {
    font-size: 1.8em;
    margin-top: 2rem;
    padding-bottom: 0.3rem;
    border-bottom: 1px solid var(--divider-color);
  }
  article :global(h3) {
    font-size: 1.4em;
    margin-top: 1.5rem;
  }
  /* (Tambahkan style global lainnya dari file lama Anda di sini jika perlu) */
</style>
